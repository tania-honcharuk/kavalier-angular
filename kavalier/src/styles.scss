
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$kavalier-primary: mat.define-palette(mat.$indigo-palette);
$kavalier-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$kavalier-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$kavalier-theme: mat.define-light-theme((
  color: (
    primary: $kavalier-primary,
    accent: $kavalier-accent,
    warn: $kavalier-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($kavalier-theme);


// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$kavalier-primary: mat.define-palette(mat.$indigo-palette);
$kavalier-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$kavalier-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$kavalier-theme: mat.define-light-theme((
  color: (
    primary: $kavalier-primary,
    accent: $kavalier-accent,
    warn: $kavalier-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($kavalier-theme);

@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

$yellow: #E4C280;
$yellow-opacity: rgba(228, 194, 128, 0.7);
$black: #000;
$white: #fff;
$text-grey: #878787;
$border-grey: #E5E5E5;

$font-family: (
  "main-font": 'Helvetica',
  "extra-font": 'Roboto'
);

$font-weigth: (
  "thin": 100,
  "extra-light": 200,
  "light": 300,
  "normal": 400,
  "medium": 500,
  "semi-bold": 600,
  "bold": 700,
  "extra-bold": 800,
  "ultra-bold": 900,
);

$letter-spacing: (
  "small": .25px,
  "big": .75px,
);

@function font ($font-name) {
  @return map-get($map: $font-family, $key: $font-name)
};

@function weight($weight-name) {
  @return map-get($map: $font-weigth, $key: $weight-name)
};

@function space($space-name) {
  @return map-get($map: $letter-spacing, $key: $space-name)
};

@mixin center {
  display: flex;
  justify-content: center;
  align-items: center;
}
html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }
